---
include:
  - 'https://git.scc.kit.edu/m-team/ci-voodoo/raw/master/ci-include/generic-ci.yml'
  #- 'https://marcus.hardt-it.de/ci-voodoo/ci-include/generic-ci.yml'
  - 'https://git.scc.kit.edu/m-team/ci-voodoo/raw/master/ci-include/pipeline-jobs.yml'
  - 'https://git.scc.kit.edu/m-team/ci-voodoo/raw/master/ci-include/distro-build-conditions.yml'


variables:
  # These variables are set globally here:
  DOCKER_IMAGE_NAMESPACE: 'marcvs/build'
  DOCKER_IMAGE_NAME: 'pam-ssh-oidc-packaging'
  PACKAGE_NAMES: 'pam-ssh-oidc pam-ssh-oidc-autoconfig'
  #TARGET_REPO: 'devel'
  # The following varialbes can be overwritten only in specific targets
  # See generic-ci.yml -> .repo-definition for the full list
  # REPO_BASE => deprecated
  # REPO_USER
  # REPO_HOST
  # PUBLISH_BUILD_RESULTS_REPO: 'devel'
  # PUBLISH_TESTED_RESULTS_REPO: 'prerel'
  # PUBLISH_MASTER_RESULTS_REPO: 'for-prod'
  # PREREL_BRANCH_NAME: 'prerel'
  # See generic-ci.yml -> .build-definition for the full list
  # DOCKER_IMAGE_VERSION
  # DOCKER_IMAGE_VERSION_WINDOWS

.deb-before-script: &deb-before-script
  - |
    make get-sources
    echo "### before-script ##############################################"
    echo "CI_COMMIT_REF_NAME: ${CI_COMMIT_REF_NAME}"
    echo "CI_COMMIT_BRANCH:   ${CI_COMMIT_BRANCH}"
    echo "CI_DEFAULT_BRANCH:  ${CI_DEFAULT_BRANCH}"
    echo "CI_PIPELINE_SOURCE: ${CI_PIPELINE_SOURCE}"
    echo "CI_UPSTREAM_PIPELINE_SOURCE:  ${CI_UPSTREAM_PIPELINE_SOURCE}"
    echo "CI_UPSTREAM_COMMIT_BRANCH:    $CI_UPSTREAM_COMMT_BRANCH"
    echo "CI_UPSTREAM_DEFAULT_BRANCH:   $CI_UPSTREAM_DEFAULT_BRANCH"
    echo "### /before-script ##############################################"

.rpm-before-script: &rpm-before-script
  - |
    set -x
    make get-sources
    make patch-for-rpm
    ls -la rpm
    set +x
    echo "### before-script ##############################################"
    echo "CI_COMMIT_REF_NAME: ${CI_COMMIT_REF_NAME}"
    echo "CI_COMMIT_BRANCH:   ${CI_COMMIT_BRANCH}"
    echo "CI_DEFAULT_BRANCH:  ${CI_DEFAULT_BRANCH}"
    echo "CI_PIPELINE_SOURCE: ${CI_PIPELINE_SOURCE}"
    echo "CI_UPSTREAM_PIPELINE_SOURCE:  ${CI_UPSTREAM_PIPELINE_SOURCE}"
    echo "CI_UPSTREAM_COMMIT_BRANCH:    $CI_UPSTREAM_COMMT_BRANCH"
    echo "CI_UPSTREAM_DEFAULT_BRANCH:   $CI_UPSTREAM_DEFAULT_BRANCH"
    echo "### /before-script ##############################################"


build-debian-buster:
  extends:
    - .build-debian-buster
  before_script:
    - *deb-before-script
  # variables:
  #   REPO_BASE: '/var/www/prerel'

build-debian-bullseye:
  extends:
    - .build-debian-bullseye
  before_script:
    - *deb-before-script

build-debian-bookworm:
  extends:
    - .build-debian-bookworm
  before_script:
    - *deb-before-script


build-ubuntu-bionic:
  extends:
    - .build-ubuntu-bionic
  before_script:
    - *deb-before-script

build-ubuntu-focal:
  extends:
    - .build-ubuntu-focal
  before_script:
    - *deb-before-script

build-ubuntu-jammy:
  extends:
    - .build-ubuntu-jammy
  before_script:
    - *deb-before-script

build-ubuntu-kinetic:
  extends:
    - .build-ubuntu-kinetic
  before_script:
    - *deb-before-script


build-centos-7:
  extends:
    - .build-centos-7
  before_script:
    - *rpm-before-script

build-centos-8:
  extends:
    - .build-centos-8
  before_script:
    - *rpm-before-script

build-centos-stream:
  extends:
    - .build-centos-stream
  before_script:
    - *rpm-before-script


build-rockylinux-8:
  extends:
    - .build-rockylinux-8

build-rockylinux-8.5:
  extends:
    - .build-rockylinux-85
  before_script:
    - *rpm-before-script


# Fedora container build fails with some GPG issues
#build-fedora-36:
#  extends:
#    - .build-fedora-36
#    - .on-push-and-master
#  before_script:
#    - *rpm-before-script

build-opensuse-15.4:
  extends:
    - .build-opensuse-154
  before_script:
    - *rpm-before-script

build-opensuse-15.5:
  extends:
    - .build-opensuse-155
  before_script:
    - *rpm-before-script

build-opensuse-tumbleweed:
  extends:
    - .build-opensuse-tumbleweed
<<<<<<< HEAD
    - .build-conditions-opensuse-tumbleweed
=======
>>>>>>> prerel
  before_script:
    - *rpm-before-script

integration-tests:
  stage: integration
  extends:
    - .repo-definition
    - .on-push-and-master
  inherit:
    variables: false
  variables:
    # these variables are actually transported to the other side,
    # even though inherit:variables:false
    CI_UPSTREAM_PIPELINE_SOURCE: $CI_PIPELINE_SOURCE
    CI_UPSTREAM_COMMIT_BRANCH: $CI_COMMIT_BRANCH
    CI_UPSTREAM_DEFAULT_BRANCH: $CI_DEFAULT_BRANCH
    RESOLVE_DEPENDENCIES_REPO: $ANYBRANCH_RESOLVE_DEPENDENCIES_REPO
    CI_UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    CI_UPSTREAM_PROJECT_PATH: $CI_PROJECT_PATH
    CI_UPSTREAM_BUILD_REF: $CI_BUILD_REF
    CI_UPSTREAM_BUILD_REF_NAME: $CI_BUILD_REF_NAME
    CI_UPSTREAM_JOB_NAME: $CI_JOB_NAME
    CI_UPSTREAM_COMMIT_REF_NAME: $CI_COMMIT_REF_NAME
  rules:
    - if: $CI_COMMIT_BRANCH == $PREREL_BRANCH_NAME
      variables:
        RESOLVE_DEPENDENCIES_REPO: $PREREL_RESOLVE_DEPENDENCIES_REPO
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        RESOLVE_DEPENDENCIES_REPO: $PREPROD_RESOLVE_DEPENDENCIES_REPO
    - when: always
  trigger:
    project: m-team/integration/test-ssh-oidc
    branch: main
    strategy: depend

publish-to-devel:
  # The stage is declared in .publish-to-repo, so it runs after the
  # integration stage
  extends:
    - .repo-definition
    - .upload-all-to-repo
  rules:
    - if: $CI_COMMIT_BRANCH == $PREREL_BRANCH_NAME
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  variables:
    REPO_TO_PUBLISH_TO: $ANYBRANCH_PUBLISH_RESULTS_REPO

publish-to-prerel:
  # The stage is declared in .publish-to-repo, so it runs after the
  # integration stage
  extends:
    - .repo-definition
    - .upload-all-to-repo
  rules:
    - if: $CI_COMMIT_BRANCH == $PREREL_BRANCH_NAME
  variables:
    REPO_TO_PUBLISH_TO: $PREREL_PUBLISH_RESULTS_REPO

publish-to-preprod:
  # The stage is declared in .publish-to-repo, so it runs after the
  # integration stage
  extends:
    - .repo-definition
    - .upload-all-to-repo
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  variables:
    REPO_TO_PUBLISH_TO: $PREPROD_PUBLISH_RESULTS_REPO

